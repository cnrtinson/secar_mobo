{******************************************************************************
*                                                                             *
*                              beamdemo_fit.fox                               *
*                                                                             *
*              An example of fitting a quadrupole triplet system              *
*                  from COSY INFINITY 10.0 Programmer's Manual                *
*                                                                             *
*                                COSY INFINITY                                *
*                                 VERSION 10.0                                *
*                                                                             *
*                           UPDATED IN OCTOBER, 2015                          *
*                                                                             *
******************************************************************************}
INCLUDE 'COSY' ;
PROCEDURE RUN ;
  VARIABLE Q1 1 ; VARIABLE Q2 1 ; VARIABLE OBJ 1 ;
  PROCEDURE TRIPLET A B ;
    MQ .1  A .05 ; DL .05 ; MQ .1 -B .05 ; DL .05 ; MQ .1  A .05 ;
    ENDPROCEDURE ;
  OV 1 2 0 ; RP 1 1 1 ;
  SB .15 .15 0 .15 .15 0 0 0 0 0 0 ;
    {sets half widths of beam .15 m in x, y and .15 rad in a, b}
  Q1 := .5 ; Q2 := .5 ; {start values of Q1, Q2}
  FIT Q1 Q2 ;
    UM ; CR ; {clears the rays}
    ER 1 3 1 3 1 1 1 1 ; {ensemble of rays, 3 in a, b}
    BP ; {begins a picture}
    DL .2 ; TRIPLET Q1 Q2 ; DL .2 ;
    EP ; {ends the picture}
    PG -1 -2 ; {outputs the x,y pictures to default windows}
    OBJ := ABS(ME(1,2))+ABS(ME(3,4)) ;
      {defines the objective OBJ.
       ME(1,2): map element (x,a),  ME(3,4): map element (y,b)}
    WRITE 6 'Q1, Q2: ' Q1 Q2  'OBJECTIVE: ' OBJ ;
    ENDFIT 1E-5 1000 1 OBJ ;
      {fits OBJ by Simplex algorithm. This is point-to-point for both x, y}
  PG -12 -12 ;
    {output final pictures to PDF files pic001.pdf and pic002.pdf}
  ENDPROCEDURE ;
RUN ; END ;
